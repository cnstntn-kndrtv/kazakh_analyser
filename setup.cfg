[pydocstyle]
match_dir = (\.|lib|server|utils)
match = .*\.py

inherit = false

ignore = D212, # Multi-line docstring summary should start at the first line
        D202, # No blank lines allowed after function docstring
        D406, # Section name should end with a newline ('Returns', not 'Returns:')
        D407, # Missing dashed underline after section ('Returns')
        D413, # Missing blank line after last section ('Returns')
        D200, # One-line docstring should fit on one line with quotes (found 3)
        D201, # No blank lines allowed before function docstring (found 1)
        D203, # 1 blank line required before class docstring (found 0)
        D107, # Missing docstring in __init__
        D405, # For TODO\:. Section name should be properly capitalized.
        D415, #same as D400 - First line should end with a period.

# autopep8
[pycodestyle]
max_line_length = 120
exclude =
    .git,
    __pycache__,
    ./dev/*
    ./env,
    _DEL_*,


[flake8]
max-line-length = 120
exclude = .git,
    __pycache__,
    ./dev/*
    ./env,
    _DEL_*,

# https://pypi.org/project/flake8-coding/
accept-encodings = utf-8,utf-16
max-complexity = 15
ignore =
    E402, # module level import not at top of file
    W503, # line break before binary operator
    C901 # name is too complex


[mypy]
files = ./utils, ./lib, ./server
python_version = 3.6
warn_return_any = True
ignore_missing_imports = True
no_strict_optional = True

[isort]
profile=black

[tool:pytest]
minversion = 6.0
log_file = ./tests/test.log
log_file_level = ERROR
markers =
    smoke: Run the smoke test test functions

# -n4 from pytest-xdist - 4 parallel tests
# --cov - for coverage
addopts =
    -ra
    --verbose
    --showlocals
    --tb=native
    --setup-show
    # --cov
    # --cov-report=html
testpaths =
    tests




[coverage:run]
source =
    lib
    server
omit=
    **/__init__.py
    **/_meta.py
    **/_DEL**

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # import
    from
    import

    # __all__
    __all__

show_missing = False
ignore_errors = True

[coverage:html]
title="coverage report"
directory=doc/coverage_report
